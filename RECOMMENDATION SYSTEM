# Sample Content-Based Recommendation System with User Input
import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer
# Step 1: Create a sample dataset of movies and their genres
data = {
    'Movie': [
        'Inception', 'Toy Story', 'Avengers: Endgame', 'The Matrix', 
        'Finding Nemo', 'Interstellar', 'The Lion King', 'Shrek', 'The Dark Knight'
    ],
    'Genre': [
        'Sci-Fi Thriller', 'Animation Comedy', 'Action Sci-Fi', 'Sci-Fi Action', 
        'Animation Adventure', 'Sci-Fi Adventure', 'Animation Drama', 'Animation Comedy', 'Action Crime'
    ]
}

# Convert the data to a pandas DataFrame
movies_df = pd.DataFrame(data)

# Step 2: Transform the genre column into a matrix of token counts
count_vectorizer = CountVectorizer()
genre_matrix = count_vectorizer.fit_transform(movies_df['Genre'])

# Step 3: Compute the cosine similarity matrix
cosine_sim = cosine_similarity(genre_matrix, genre_matrix)

# Step 4: Function to recommend movies based on user preference
def recommend_movies(movie_title, num_recommendations=3):
    # Check if the movie is in the dataset
    if movie_title not in movies_df['Movie'].values:
        return "Sorry, we don't have that movie in our database. Please try another one."
    
    # Get the index of the movie that matches the title
    movie_idx = movies_df[movies_df['Movie'] == movie_title].index[0]
    
    # Get the pairwise similarity scores of all movies with the selected movie
    similarity_scores = list(enumerate(cosine_sim[movie_idx]))
    
    # Sort the movies based on similarity scores
    similarity_scores = sorted(similarity_scores, key=lambda x: x[1], reverse=True)
    
    # Get the scores of the top 'num_recommendations' movies
    top_movies_indices = [i[0] for i in similarity_scores[1:num_recommendations+1]]
    
    # Return the top recommended movies
    return movies_df['Movie'].iloc[top_movies_indices]

# Example usage with user input
user_movie = input("Enter a movie you like: ")  # User input for the movie title
print(f"Since you liked '{user_movie}', you might also like these movies:")
print(recommend_movies(user_movie))
